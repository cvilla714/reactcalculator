{"version":3,"sources":["index.js"],"names":["nums","ops","ids","7","8","9","4","5","6","1","2","3","0","App","state","lastPressed","undefined","calc","operation","handleClick","e","innerText","target","setState","evaluated","eval","splitted","split","last","slice","includes","lastNumberIdx","reverse","findIndex","char","length","this","className","id","onClick","map","num","op","React","Component","ReactDOM","render","document","querySelector"],"mappings":"g3DAKMA,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCC,IAAM,CAAC,IAAK,IAAK,IAAK,KACtBC,IAAM,CACVC,EAAG,QACHC,EAAG,QACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QACHC,EAAG,OACH,IAAK,SACL,IAAK,WACL,IAAK,WACL,IAAK,OAGDC,I,swBACJC,MAAQ,CACNC,iBAAaC,EACbC,KAAM,IACNC,eAAWF,G,MAGbG,YAAc,SAACC,GAAO,IAAD,YACW,MAAKN,MAA3BG,KADW,YACXA,KAAMF,YADK,YACLA,YACNM,UAAcD,EAAEE,OAAhBD,UAER,OAAQA,WACN,IAAK,KACH,MAAKE,SAAS,CACZN,KAAM,MAER,MAGF,IAAK,IACH,IAAMO,UAAYC,KAAKR,MACvB,MAAKM,SAAS,CACZN,KAAMO,YAER,MAGF,IAAK,IACH,IAAME,SAAWT,KAAKU,MAAM,cACtBC,KAAOF,SAASG,OAAO,GAAG,GAE3BD,KAAKE,SAAS,MACjB,MAAKP,SAAS,CACZN,KAAMA,KAAO,MAIjB,MAGF,QACE,IAAIG,QAAIJ,EAER,GAAIf,IAAI6B,SAAST,WACf,GAAIpB,IAAI6B,SAASf,cAA8B,MAAdM,UAAmB,CAElD,IAAMU,cAAgBd,KACnBU,MAAM,IACNK,UACAC,WAAU,SAACC,GAAD,MAAmB,MAATA,GAAgBlC,KAAK8B,UAAUI,MACtDd,GAAIH,KAAKY,MAAM,EAAGZ,KAAKkB,OAASJ,eAA5B,WAAiDV,UAAjD,UAEJD,GAAC,UAAMH,KAAN,YAAcI,UAAd,UAGHD,GAAa,MAATH,KAAeI,UAAYJ,KAAOI,UAGxC,MAAKE,SAAS,CACZN,KAAMG,KAKZ,MAAKG,SAAS,CACZR,YAAaM,a,+MAIjB,WAAU,IAAD,OACCJ,EAASmB,KAAKtB,MAAdG,KAER,OACE,mEAAKoB,UAAU,aAAf,UACE,kEAAKC,GAAG,UAAUD,UAAU,UAA5B,SACGpB,IAGH,mEAAKoB,UAAU,iBAAf,UACE,qEAAQA,UAAU,sBAAsBE,QAASH,KAAKjB,YAAamB,GAAG,QAAtE,gBAICtC,KAAKwC,KAAI,SAACC,GAAD,OACR,qEAAQJ,UAAS,oBAAuB,IAARI,GAAa,SAAqBF,QAAS,EAAKpB,YAAamB,GAAIpC,IAAIuC,GAArG,SACGA,GAD0DA,MAK/D,qEAAQJ,UAAU,aAAaE,QAASH,KAAKjB,YAAamB,GAAG,UAA7D,kBAIF,mEAAKD,UAAU,gBAAf,UACGpC,IAAIuC,KAAI,SAACE,GAAD,OACP,qEAAQL,UAAU,SAAkBE,QAAS,EAAKpB,YAAamB,GAAIpC,IAAIwC,GAAvE,SACGA,GAD6BA,MAKlC,qEAAQL,UAAU,SAASE,QAASH,KAAKjB,YAAamB,GAAG,SAAzD,yB,KApGQK,6CAAMC,WA6GxBC,iDAASC,OAAO,2DAACjC,IAAD,IAASkC,SAASC,cAAc,Y","file":"static/js/main.a4dab71a.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nconst nums = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0];\nconst ops = [\"/\", \"*\", \"-\", \"+\"];\nconst ids = {\n  7: \"seven\",\n  8: \"eight\",\n  9: \"nine\",\n  4: \"four\",\n  5: \"five\",\n  6: \"six\",\n  1: \"one\",\n  2: \"two\",\n  3: \"three\",\n  0: \"zero\",\n  \"/\": \"divide\",\n  \"*\": \"multiply\",\n  \"-\": \"subtract\",\n  \"+\": \"add\",\n};\n\nclass App extends React.Component {\n  state = {\n    lastPressed: undefined,\n    calc: \"0\",\n    operation: undefined,\n  };\n\n  handleClick = (e) => {\n    const { calc, lastPressed } = this.state;\n    const { innerText } = e.target;\n\n    switch (innerText) {\n      case \"AC\": {\n        this.setState({\n          calc: \"0\",\n        });\n        break;\n      }\n\n      case \"=\": {\n        const evaluated = eval(calc);\n        this.setState({\n          calc: evaluated,\n        });\n        break;\n      }\n\n      case \".\": {\n        const splitted = calc.split(/[\\+\\-\\*\\/]/);\n        const last = splitted.slice(-1)[0];\n\n        if (!last.includes(\".\")) {\n          this.setState({\n            calc: calc + \".\",\n          });\n        }\n\n        break;\n      }\n\n      default: {\n        let e = undefined;\n        // check for other op\n        if (ops.includes(innerText)) {\n          if (ops.includes(lastPressed) && innerText !== \"-\") {\n            // splitting the characters to avoid the double minus bug operation\n            const lastNumberIdx = calc\n              .split(\"\")\n              .reverse()\n              .findIndex((char) => char !== \" \" && nums.includes(+char));\n            e = calc.slice(0, calc.length - lastNumberIdx) + ` ${innerText} `;\n          } else {\n            e = `${calc} ${innerText} `;\n          }\n        } else {\n          e = calc === \"0\" ? innerText : calc + innerText;\n        }\n\n        this.setState({\n          calc: e,\n        });\n      }\n    }\n\n    this.setState({\n      lastPressed: innerText,\n    });\n  };\n\n  render() {\n    const { calc } = this.state;\n\n    return (\n      <div className=\"calculator\">\n        <div id=\"display\" className=\"display\">\n          {calc}\n        </div>\n\n        <div className=\"nums-container\">\n          <button className=\"big-h light-grey ac\" onClick={this.handleClick} id=\"clear\">\n            AC\n          </button>\n\n          {nums.map((num) => (\n            <button className={`dark-grey ${num === 0 && \"big-h\"}`} key={num} onClick={this.handleClick} id={ids[num]}>\n              {num}\n            </button>\n          ))}\n\n          <button className=\"light-grey\" onClick={this.handleClick} id=\"decimal\">\n            .\n          </button>\n        </div>\n        <div className=\"ops-container\">\n          {ops.map((op) => (\n            <button className=\"orange\" key={op} onClick={this.handleClick} id={ids[op]}>\n              {op}\n            </button>\n          ))}\n\n          <button className=\"orange\" onClick={this.handleClick} id=\"equals\">\n            =\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}